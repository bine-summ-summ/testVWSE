//ich starte die jar indem ich in das verzeichnsi der jar gehe udn dann java -jar VWSE_ESA4.jar com.bine.Main
def vwseModulesFile = file("vwse-modules.properties")
import org.ajoberstar.grgit.*
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin:'groovy'
apply plugin: 'idea'
apply plugin:'application'
sourceCompatibility = 1.8
version = 'alpha'

buildscript {
	repositories { mavenCentral() }
	dependencies { classpath 'org.ajoberstar:gradle-git:0.8.0' }
}
jar {
	manifest {
		attributes 'Implementation-Title': 'Orego with a GrdelWrapper', 'Implementation-Version': version
	}
}

mainClassName = "com.bine.Main"

//github cheatcheet gradle is gut

sourceSets{
	main.java.srcDir "src"
	test {
		java {
			srcDirs = ["test"]
		}
	}
}

jar {
	manifest.attributes "Main-Class": "com.bine.Main"
}
repositories { mavenCentral() }
dependencies {
	testCompile group: 'junit', name: 'junit', version: '4.+'
	//testCompile 'junit:junit:4.12'
}
task clone {
	File dir=new File('orego')
	if(!dir.exists()) {
		def grgit = Grgit.clone(dir: dir, uri: 'https://github.com/bine-summ-summ/testVWSE')
	}
}
compileJava.dependsOn clone


task hello(group: 'greeting', description: 'Greets you.')
Properties myModules = new Properties();
if (vwseModulesFile.exists()) {
    myModules.load(new FileReader(vwseModulesFile))
}
//println "adding module to modules-list..."
//myModules.setProperty(moduleName, moduleRepository)

task copyPoems(type: Copy) {
	group 'Bines-Tasks'
	description 'Copies poems in build dir.'
	doFirst{
		println 'start prnited during configuration phase'
	}
	println 'mitte printed during execution phase'
	
	from 'poetry-collection'
	into 'build/copied'
	doLast{
		println 'geschaft printed during execution phase'
	}
}

task hello2 { 
	println 'Hello from the configuration phase' 
	ext.greeting = 'Hey, how\'s it going?' 
    
	doLast { 
		println "Greeting: $greeting" 
	} 
} 


task deletePoems(type: Delete){
	group 'Bines-Tasks'
	description 'Deletes poems in build dir, except the containg em4.'
	delete fileTree(dir: "build/copied/", exclude: "*em4*")

	println 'Datein gel√∂scht.'
	
}
task letzter(){
	println 'Vorbei'

}
